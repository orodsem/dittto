{% extends 'base.html.twig' %}

{% block title %}Dashboard{% endblock %}

{% block stylesheets %}
<link rel="stylesheet" href="{{ asset( 'assets/css/dittto-dashboard.css') }}" />
{% endblock %}

{% block body %}

    <h1 class="page-header-1">Dashboard</h1>

    {% if notRepliedRecognitionDetails is not empty %}
        <input type="hidden" id="total-recognitions" value="{{ notRepliedRecognitionDetails|length }}"/>
        <!-- modal to display recognitions that should be replied back -->
        <div class="modal fade" id="replyBackModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">Ã—</button>
                        <h4 class="modal-title">You recently recognised</h4>
                    </div>
                    <div class="modal-body">
                        {% for key,recognition in notRepliedRecognitionDetails %}
                            <div id="recognition-content-{{ recognition.criteriaId }}-{{ key }}"
                                 class="recognition-modal-content small">
                                {{ recognition.message|raw }}

                                {% if recognition.responseType == 0 %}
                                <a
                                        id="recognition-icon-{{ recognition.criteriaId }}-{{ key }}"
                                        onclick="replyBack({{ recognition.recognitionId }}, {{ recognition.criteriaId }}, {{ recognition.senderId }}, {{ key }});">
                                    <span class="glyphicon glyphicon-thumbs-up"></span>
                                </a>
                                {% endif %}
                                {# spinning wheel for each reply #}
                                <span id="spinning-{{ recognition.criteriaId }}-{{ key }}" class="hide">
                                    <span class="glyphicon glyphicon-refresh glyphicon-spin"></span>
                                </span>

                                <span id="icon-success-{{ recognition.criteriaId }}-{{ key }}"
                                        class="glyphicon glyphicon-ok icon-success hide"></span>
                                <hr>
                            </div>
                        {% endfor %}
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div><!-- /.modal-content -->
            </div><!-- /.modal-dialog -->
        </div><!-- /.modal -->
    {% endif %}

    {# Rank details #}
    <div class="container">
        {# First row #}
        <div class="row">
            {# Progress bar #}
            <div class="col-md-6 col-sm-6 col-xs-12">
                <h3 class="chart-header">Total Sent</h3>
                <div class="total-recognition-box col-md-12">
                    <div class="row">
                        <div class="col-md-6 gel-long-primer">Total Sent</div>
                        <div class="col-md-6 percentage-bar-chart__sub-heading gel-long-primer">Total</div>
                    </div>

                    <div class="percentage-bar-chart__chart-wrapper">
                        <span class="percentage-bar-chart__percentage gel-pica">{{ sentPercentage }}</span>
                        <div class="percentage-bar-chart__chart">
                            <span class="percentage-bar-chart__total-bar">
                                <span class="percentage-bar-chart__percentage-bar" style="width:{{ sentPercentage }};">
                                    <span class="percentage-bar-chart__figure gel-minion">{{ totalSentByUser }}</span>
                                </span>
                            </span>
                        </div>
                        <span class="percentage-bar-chart__total gel-pica shots-total ">{{ totalRecognitionsGoal }}</span>
                    </div>
                </div>
            </div>

            {# Rank box #}
            <div class="col-md-6 col-sm-6 col-xs-12">
                <h3 class="chart-header">Your Rank</h3>
                <div class="total-recognition-box">
                    <div class="row">
                        <div class="col-md-2 col-sm-6 col-xs-12 strong text-center rank-box-text">
                            {{ rankDetails['rank'] }}
                        </div>
                        <div class="col-md-2 col-sm-6 col-xs-12 text-center">
                            <img class="rank-img" src="{{ asset( rankDetails['imagePath']) }}" alt="">
                        </div>
                        <div class="col-md-8 col-sm-6 col-xs-12 strong text-center rank-box-text">
                            {{ rankDetails['rankMessage'] }}
                        </div>
                    </div>
                </div>
            </div>
        </div>

        {# Charts #}
        <div class="row">
            <div class="col-md-6 col-sm-6 col-xs-12">
                <h3 class="chart-header">Recognition Sent</h3>
                <div id="piechart-sent"></div>
            </div>
            <div class="col-md-6 col-sm-6 col-xs-12">
                <h3 class="chart-header">Recognition Received</h3>
                <div id="piechart-received"></div>
            </div>
        </div>
    </div>

    <input type="hidden" id="user-vs-total-received" value="{{ userVsTotal }}">

{% endblock %}

{% block javascripts %}
    <script type="text/javascript">

        /**
         * replay back to recogniser
         *
         * @param recognitionId
         * @param criteriaId
         * @param senderId
         * @param key this is just a unique identifier to find the spinning wheel
         */
        function replyBack(recognitionId, criteriaId, senderId, key) {
            var spinningWheel = $('#spinning-'+criteriaId+'-'+key);
            var recognitionIcon = $('#recognition-icon-'+criteriaId+'-'+key);
            var tick = $('#icon-success-'+criteriaId+'-'+key);
            var recognitionContent = $('#recognition-content-'+criteriaId+'-'+key);
            var totalNumberRecognitionDom = $('#total-recognitions');
            var numberOfRecognitions = totalNumberRecognitionDom.val(); // for some reason always return one more!

            spinningWheel.removeClass('hide');
            recognitionIcon.addClass('hide');

            $.ajax({
                url:'{{ (path('dittto_recognition_recognise_back_user')) }}',
                type: "POST",
                dataType: "json",
                data: {
                    "criteriaId": criteriaId,
                    "senderId"  : senderId,
                    "recognitionId"  : recognitionId
                },
                async: true,
                success: function (data)
                {
                    spinningWheel.addClass('hide');
                    tick.removeClass('hide');
                    recognitionContent.slideUp( 300 ).delay( 30000 ).fadeOut( 400 );
                    // decrease the number of recognition left
                    numberOfRecognitions = numberOfRecognitions - 1;
                    // update total number of recognitions
                    totalNumberRecognitionDom.val(numberOfRecognitions);

                    if (numberOfRecognitions === 0) {
                        // if no recognition left then close the modal
                        $('#replyBackModal').modal('toggle');
                        // make sure to refresh the page
                        location.reload();
                    }
                }
            });
        }

        $('#replyBackModal').on('hidden.bs.modal', function () {
            // make sure to refresh the page when user closes the modal
            location.reload();
        });

        $(document).ready(function() {
            // Load google charts
            google.charts.load('current', {'packages':['corechart']});
            google.charts.setOnLoadCallback(drawChart);

            // Draw the chart and set the chart values
            function drawChart() {
                var userVsTotal = $('#user-vs-total-received').val();
                var userVsTotalObj = JSON.parse(userVsTotal);

                var totalReceivedByUser = userVsTotalObj.totalReceivedByUser;
                var totalSentByUser = userVsTotalObj.totalSentByUser;
                var totalRecognition = userVsTotalObj.totalRecognitions;

                var dataReceived = google.visualization.arrayToDataTable([
                    ['User', 'number of recognition received'],
                    ['You', totalReceivedByUser],
                    ['School', totalRecognition]
                ]);

                var dataSent = google.visualization.arrayToDataTable([
                    ['User', 'number of recognition sent'],
                    ['You', totalSentByUser],
                    ['School', totalRecognition]
                ]);

                // Optional; add a title and set the width and height of the chart
                var optionsReceived = {
                    'title':'{{ app.user.firstName }} ~ all school [received]',
                    'pieSliceText': 'value',    // if remove it, displays % instead of value
                    'slices': {                 // TODO: this should be dynamically generated from DB
                        0: { color: '#78B3C6' },
                        1: { color: '#BFE1D9' }
                    },
                    'width':300,
                    'height':300
                };

                var optionsSent = {
                    'title':'{{ app.user.firstName }} ~ all school [sent]',
                    'pieSliceText': 'value',    // if remove it, displays % instead of value
                    'slices': {                 // TODO: this should be dynamically generated from DB
                        0: { color: '#78B3C6' },
                        1: { color: '#BFE1D9' }
                    },
                    'width':300,
                    'height':300
                };

                // Display the chart including received recognitions by user
                var chartReceived = new google.visualization.PieChart(document.getElementById('piechart-received'));
                chartReceived.draw(dataReceived, optionsReceived);
                // Display the chart including sent recognitions by user
                var chartSent = new google.visualization.PieChart(document.getElementById('piechart-sent'));
                chartSent.draw(dataSent, optionsSent);
            }
        });
    </script>
{% endblock %}